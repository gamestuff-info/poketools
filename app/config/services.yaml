imports:
  - resource: services/doctrine_extensions.yaml

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  default_version: ultra-sun
  data_path: '%kernel.project_dir%/resources/data'
  commonmark_config:
    html_input: allow
    allow_unsafe_links: false

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    bind:
      $appEnv: '%kernel.environment%'
      $dataPath: '%data_path%'
      $projectDir: '%kernel.project_dir%'
      $defaultVersion: '@app.default_version'
      $itemExtensions: !tagged api_platform.doctrine.orm.query_extension.item
      $collectionExtensions: !tagged api_platform.doctrine.orm.query_extension.collection

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'
      - '../src/Tests/'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller/'
    tags: [ 'controller.service_arguments' ]

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  App\A2B\Drivers\Destination\DbalDestinationDriver:
    arguments:
      - '@doctrine.dbal.connection_factory'

  # Classes that require a specific service injected
  App\DataMigration\Region:
    arguments:
      $projectDir: '%kernel.project_dir%'
  App\Repository\VersionRepository:
    arguments:
      $defaultVersionSlug: '%default_version%'
  App\ApiPlatform\Serializer\VersionContextBuilder:
    decorates: 'api_platform.serializer.context_builder'
    arguments:
      $decorated: '@.inner'
    autoconfigure: false
  App\ApiPlatform\Normalizer:
    decorates: 'api_platform.jsonld.normalizer.item'
    arguments:
      $decorated: '@.inner'
  app.default_version:
    class: 'App\Entity\Version'
    factory: [ '@App\Repository\VersionRepository', 'getDefaultVersion' ]
    lazy: true

  # Markdown
  League\CommonMark\Extension\CommonMarkCoreExtension:
  League\CommonMark\Extension\InlinesOnly\InlinesOnlyExtension:
  League\CommonMark\Extension\Table\TableExtension:
  League\CommonMark\Extension\DisallowedRawHtml\DisallowedRawHtmlExtension:
  League\CommonMark\Extension\Table\TableRenderer:
  App\CommonMark\VersionAwareCommonMarkFactory:
    arguments:
      $commonMarkConfig: '%commonmark_config%'
      $extensions:
        - '@League\CommonMark\Extension\CommonMarkCoreExtension'
        - '@League\CommonMark\Extension\Table\TableExtension'
        - '@League\CommonMark\Extension\DisallowedRawHtml\DisallowedRawHtmlExtension'
        - '@App\CommonMark\Extension\PoketoolsTableExtension'
        - '@App\CommonMark\Extension\PoketoolsInlineExtension'

  # VENDORS
  TeamTNT\TNTSearch\TNTSearch:
    factory: [ 'App\Search\TntSearchFactory', 'create' ]
    arguments:
      $searchIndexPath: '%env(resolve:SEARCH_INDEX_STORAGE)%'
