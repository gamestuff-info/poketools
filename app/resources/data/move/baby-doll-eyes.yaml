x-y:
  name: &x-y.name 'Baby-Doll Eyes'
  flags: &x-y.flags
    - protect
    - reflectable
    - mirror
  categories: &x-y.categories
    - net-good-stats
  hits: &x-y.hits 1
  turns: &x-y.turns 1
  stat_changes: &x-y.stat_changes
    attack: -1
  type: &x-y.type fairy
  pp: &x-y.pp 30
  accuracy: &x-y.accuracy 100
  priority: &x-y.priority 1
  target: &x-y.target selected-pokemon
  damage_class: &x-y.damage_class status
  effect: &x-y.effect 365
  flavor_text: &x-y.flavor_text |
    The user stares at the target with its baby-doll
    eyes, which lowers its Attack stat. This move
    always goes first.
omega-ruby-alpha-sapphire:
  name: *x-y.name
  flags: *x-y.flags
  categories: *x-y.categories
  hits: *x-y.hits
  turns: *x-y.turns
  stat_changes: *x-y.stat_changes
  type: *x-y.type
  pp: *x-y.pp
  accuracy: *x-y.accuracy
  priority: *x-y.priority
  target: *x-y.target
  damage_class: *x-y.damage_class
  effect: *x-y.effect
  contest_type: cute
  contest_effect: 30
  flavor_text: *x-y.flavor_text
sun-moon: &sun-moon
  name: *x-y.name
  flags: *x-y.flags
  categories: *x-y.categories
  hits: *x-y.hits
  turns: *x-y.turns
  stat_changes: *x-y.stat_changes
  type: *x-y.type
  pp: *x-y.pp
  accuracy: *x-y.accuracy
  priority: *x-y.priority
  target: *x-y.target
  damage_class: *x-y.damage_class
  effect: *x-y.effect
  flavor_text: |
    The user stares at the target with its baby-doll
    eyes, which lowers its Attack stat. This move always
    goes first.
ultra-sun-ultra-moon: *sun-moon
